# 1. Задать список из n чисел последовательности (1+1*n)^n и вывести на экран их сумму

# 2. Найти сумму чисел списка стоящих на нечетной позиции

# 3. Дана последовательность чисел. Получить список неповторяющихся элементов исходной последовательности

# включения - генерируют набор элементов [x for x in range(10)]
# lambda - краткая реализация функции (в одну строчку)
# map - применить функцию к набору элементов
# filter - отфильтровать элементы
# (filter(условие, для каких элементов))
# zip - поэлементно комбинирует в кортежи

# 1. Задать список из n чисел последовательности (1+1*n)^n и вывести на экран их сумму

# n = int(input('n = '))
# my_list = [(1 + 1 * i)**i for i in range(1, n+1)]  # указываем какие значения нам нужно получить и из каких элементов
# print(sum(my_list))

# print(sum(list(map(lambda n: (1 + 1 * n) ** n, [n for n in range(1, 21)]))))



# 2. Найти сумму чисел списка стоящих на нечетной позиции

# n = int(input('n = '))
# print(sum(list(filter(lambda x: x%2, [x for x in range(1, n + 1)]))))



# 3. Дана последовательность чисел. Получить список неповторяющихся элементов исходной последовательности

my_list = [1, 3, 6, 3, 6, 12]
new_list = []

# def f_1(x):
#     global new_list
#     if x not in new_list:
#         new_list.append(x)

# f = lambda x: new_list.append(x) if x not in new_list else False

res = list(filter(lambda x: new_list.append(x) if x not in new_list else False, my_list))
print(new_list)